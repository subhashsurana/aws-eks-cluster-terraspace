
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  + create

Terraform will perform the following actions:

  # module.vpc.aws_default_network_acl.this[0] will be created
  + resource "aws_default_network_acl" "this" {
      + arn                    = (known after apply)
      + default_network_acl_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + tags                   = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-default"
        }
      + tags_all               = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-default"
        }
      + vpc_id                 = (known after apply)

      + egress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
            # (1 unchanged attribute hidden)
        }
      + egress {
          + action          = "allow"
          + cidr_block      = "0.0.0.0/0"
          + from_port       = 0
          + protocol        = "-1"
          + rule_no         = 100
          + to_port         = 0
            # (1 unchanged attribute hidden)
        }

      + ingress {
          + action          = "allow"
          + from_port       = 0
          + ipv6_cidr_block = "::/0"
          + protocol        = "-1"
          + rule_no         = 101
          + to_port         = 0
            # (1 unchanged attribute hidden)
        }
      + ingress {
          + action          = "allow"
          + cidr_block      = "0.0.0.0/0"
          + from_port       = 0
          + protocol        = "-1"
          + rule_no         = 100
          + to_port         = 0
            # (1 unchanged attribute hidden)
        }
    }

  # module.vpc.aws_default_route_table.default[0] will be created
  + resource "aws_default_route_table" "default" {
      + arn                    = (known after apply)
      + default_route_table_id = (known after apply)
      + id                     = (known after apply)
      + owner_id               = (known after apply)
      + route                  = (known after apply)
      + tags                   = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-default"
        }
      + tags_all               = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-default"
        }
      + vpc_id                 = (known after apply)

      + timeouts {
          + create = "5m"
          + update = "5m"
        }
    }

  # module.vpc.aws_default_security_group.this[0] will be created
  + resource "aws_default_security_group" "this" {
      + arn                    = (known after apply)
      + description            = (known after apply)
      + egress                 = (known after apply)
      + id                     = (known after apply)
      + ingress                = (known after apply)
      + name                   = (known after apply)
      + name_prefix            = (known after apply)
      + owner_id               = (known after apply)
      + revoke_rules_on_delete = false
      + tags                   = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-default"
        }
      + tags_all               = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-default"
        }
      + vpc_id                 = (known after apply)
    }

  # module.vpc.aws_eip.nat[0] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-us-east-1a"
        }
      + tags_all             = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-us-east-1a"
        }
      + vpc                  = (known after apply)
    }

  # module.vpc.aws_eip.nat[1] will be created
  + resource "aws_eip" "nat" {
      + allocation_id        = (known after apply)
      + arn                  = (known after apply)
      + association_id       = (known after apply)
      + carrier_ip           = (known after apply)
      + customer_owned_ip    = (known after apply)
      + domain               = "vpc"
      + id                   = (known after apply)
      + instance             = (known after apply)
      + network_border_group = (known after apply)
      + network_interface    = (known after apply)
      + private_dns          = (known after apply)
      + private_ip           = (known after apply)
      + ptr_record           = (known after apply)
      + public_dns           = (known after apply)
      + public_ip            = (known after apply)
      + public_ipv4_pool     = (known after apply)
      + tags                 = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-us-east-1b"
        }
      + tags_all             = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-us-east-1b"
        }
      + vpc                  = (known after apply)
    }

  # module.vpc.aws_internet_gateway.this[0] will be created
  + resource "aws_internet_gateway" "this" {
      + arn      = (known after apply)
      + id       = (known after apply)
      + owner_id = (known after apply)
      + tags     = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc"
        }
      + tags_all = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc"
        }
      + vpc_id   = (known after apply)
    }

  # module.vpc.aws_nat_gateway.this[0] will be created
  + resource "aws_nat_gateway" "this" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags                               = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-us-east-1a"
        }
      + tags_all                           = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-us-east-1a"
        }
    }

  # module.vpc.aws_nat_gateway.this[1] will be created
  + resource "aws_nat_gateway" "this" {
      + allocation_id                      = (known after apply)
      + association_id                     = (known after apply)
      + connectivity_type                  = "public"
      + id                                 = (known after apply)
      + network_interface_id               = (known after apply)
      + private_ip                         = (known after apply)
      + public_ip                          = (known after apply)
      + secondary_private_ip_address_count = (known after apply)
      + secondary_private_ip_addresses     = (known after apply)
      + subnet_id                          = (known after apply)
      + tags                               = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-us-east-1b"
        }
      + tags_all                           = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-us-east-1b"
        }
    }

  # module.vpc.aws_route.private_nat_gateway[0] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route.private_nat_gateway[1] will be created
  + resource "aws_route" "private_nat_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + nat_gateway_id         = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route.public_internet_gateway[0] will be created
  + resource "aws_route" "public_internet_gateway" {
      + destination_cidr_block = "0.0.0.0/0"
      + gateway_id             = (known after apply)
      + id                     = (known after apply)
      + instance_id            = (known after apply)
      + instance_owner_id      = (known after apply)
      + network_interface_id   = (known after apply)
      + origin                 = (known after apply)
      + route_table_id         = (known after apply)
      + state                  = (known after apply)

      + timeouts {
          + create = "5m"
        }
    }

  # module.vpc.aws_route_table.private[0] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-private-us-east-1a"
        }
      + tags_all         = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-private-us-east-1a"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.private[1] will be created
  + resource "aws_route_table" "private" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-private-us-east-1b"
        }
      + tags_all         = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-private-us-east-1b"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table.public[0] will be created
  + resource "aws_route_table" "public" {
      + arn              = (known after apply)
      + id               = (known after apply)
      + owner_id         = (known after apply)
      + propagating_vgws = (known after apply)
      + route            = (known after apply)
      + tags             = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-public"
        }
      + tags_all         = {
          + "Env"       = "dev"
          + "ManagedBy" = "terraform"
          + "Name"      = "eks-dev-cluster-eks-dev-vpc-public"
        }
      + vpc_id           = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[0] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.private[1] will be created
  + resource "aws_route_table_association" "private" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[0] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_route_table_association.public[1] will be created
  + resource "aws_route_table_association" "public" {
      + id             = (known after apply)
      + route_table_id = (known after apply)
      + subnet_id      = (known after apply)
    }

  # module.vpc.aws_subnet.private[0] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.20.0.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Env"                                   = "dev"
          + "ManagedBy"                             = "terraform"
          + "Name"                                  = "eks-dev-cluster-eks-dev-vpc-private-us-east-1a"
          + "karpenter.sh/discovery"                = "eks-dev-cluster"
          + "kubernetes.io/cluster/eks-dev-cluster" = "shared"
          + "kubernetes.io/role/internal-elb"       = "1"
        }
      + tags_all                                       = {
          + "Env"                                   = "dev"
          + "ManagedBy"                             = "terraform"
          + "Name"                                  = "eks-dev-cluster-eks-dev-vpc-private-us-east-1a"
          + "karpenter.sh/discovery"                = "eks-dev-cluster"
          + "kubernetes.io/cluster/eks-dev-cluster" = "shared"
          + "kubernetes.io/role/internal-elb"       = "1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.private[1] will be created
  + resource "aws_subnet" "private" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.20.16.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Env"                                   = "dev"
          + "ManagedBy"                             = "terraform"
          + "Name"                                  = "eks-dev-cluster-eks-dev-vpc-private-us-east-1b"
          + "karpenter.sh/discovery"                = "eks-dev-cluster"
          + "kubernetes.io/cluster/eks-dev-cluster" = "shared"
          + "kubernetes.io/role/internal-elb"       = "1"
        }
      + tags_all                                       = {
          + "Env"                                   = "dev"
          + "ManagedBy"                             = "terraform"
          + "Name"                                  = "eks-dev-cluster-eks-dev-vpc-private-us-east-1b"
          + "karpenter.sh/discovery"                = "eks-dev-cluster"
          + "kubernetes.io/cluster/eks-dev-cluster" = "shared"
          + "kubernetes.io/role/internal-elb"       = "1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[0] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1a"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.20.32.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Env"                                   = "dev"
          + "ManagedBy"                             = "terraform"
          + "Name"                                  = "eks-dev-cluster-eks-dev-vpc-public-us-east-1a"
          + "kubernetes.io/cluster/eks-dev-cluster" = "shared"
          + "kubernetes.io/role/elb"                = "1"
        }
      + tags_all                                       = {
          + "Env"                                   = "dev"
          + "ManagedBy"                             = "terraform"
          + "Name"                                  = "eks-dev-cluster-eks-dev-vpc-public-us-east-1a"
          + "kubernetes.io/cluster/eks-dev-cluster" = "shared"
          + "kubernetes.io/role/elb"                = "1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_subnet.public[1] will be created
  + resource "aws_subnet" "public" {
      + arn                                            = (known after apply)
      + assign_ipv6_address_on_creation                = false
      + availability_zone                              = "us-east-1b"
      + availability_zone_id                           = (known after apply)
      + cidr_block                                     = "10.20.48.0/20"
      + enable_dns64                                   = false
      + enable_resource_name_dns_a_record_on_launch    = false
      + enable_resource_name_dns_aaaa_record_on_launch = false
      + id                                             = (known after apply)
      + ipv6_cidr_block_association_id                 = (known after apply)
      + ipv6_native                                    = false
      + map_public_ip_on_launch                        = false
      + owner_id                                       = (known after apply)
      + private_dns_hostname_type_on_launch            = (known after apply)
      + tags                                           = {
          + "Env"                                   = "dev"
          + "ManagedBy"                             = "terraform"
          + "Name"                                  = "eks-dev-cluster-eks-dev-vpc-public-us-east-1b"
          + "kubernetes.io/cluster/eks-dev-cluster" = "shared"
          + "kubernetes.io/role/elb"                = "1"
        }
      + tags_all                                       = {
          + "Env"                                   = "dev"
          + "ManagedBy"                             = "terraform"
          + "Name"                                  = "eks-dev-cluster-eks-dev-vpc-public-us-east-1b"
          + "kubernetes.io/cluster/eks-dev-cluster" = "shared"
          + "kubernetes.io/role/elb"                = "1"
        }
      + vpc_id                                         = (known after apply)
    }

  # module.vpc.aws_vpc.this[0] will be created
  + resource "aws_vpc" "this" {
      + arn                                  = (known after apply)
      + cidr_block                           = "10.20.0.0/16"
      + default_network_acl_id               = (known after apply)
      + default_route_table_id               = (known after apply)
      + default_security_group_id            = (known after apply)
      + dhcp_options_id                      = (known after apply)
      + enable_dns_hostnames                 = true
      + enable_dns_support                   = true
      + enable_network_address_usage_metrics = (known after apply)
      + id                                   = (known after apply)
      + instance_tenancy                     = "default"
      + ipv6_association_id                  = (known after apply)
      + ipv6_cidr_block                      = (known after apply)
      + ipv6_cidr_block_network_border_group = (known after apply)
      + main_route_table_id                  = (known after apply)
      + owner_id                             = (known after apply)
      + tags                                 = {
          + "Env"                                   = "dev"
          + "ManagedBy"                             = "terraform"
          + "Name"                                  = "eks-dev-cluster-eks-dev-vpc"
          + "kubernetes.io/cluster/eks-dev-cluster" = "shared"
        }
      + tags_all                             = {
          + "Env"                                   = "dev"
          + "ManagedBy"                             = "terraform"
          + "Name"                                  = "eks-dev-cluster-eks-dev-vpc"
          + "kubernetes.io/cluster/eks-dev-cluster" = "shared"
        }
    }

Plan: 23 to add, 0 to change, 0 to destroy.

Changes to Outputs:
  + cgw_arns                                    = []
  + cgw_ids                                     = []
  + database_nat_gateway_route_ids              = []
  + database_route_table_association_ids        = []
  + database_route_table_ids                    = [
      + (known after apply),
      + (known after apply),
    ]
  + database_subnet_arns                        = []
  + database_subnets                            = []
  + database_subnets_cidr_blocks                = []
  + database_subnets_ipv6_cidr_blocks           = []
  + default_network_acl_id                      = (known after apply)
  + default_route_table_id                      = (known after apply)
  + default_security_group_id                   = (known after apply)
  + elasticache_route_table_association_ids     = []
  + elasticache_route_table_ids                 = (known after apply)
  + elasticache_subnet_arns                     = []
  + elasticache_subnets                         = []
  + elasticache_subnets_cidr_blocks             = []
  + elasticache_subnets_ipv6_cidr_blocks        = []
  + igw_arn                                     = (known after apply)
  + igw_id                                      = (known after apply)
  + intra_route_table_association_ids           = []
  + intra_route_table_ids                       = []
  + intra_subnet_arns                           = []
  + intra_subnets                               = []
  + intra_subnets_cidr_blocks                   = []
  + intra_subnets_ipv6_cidr_blocks              = []
  + nat_ids                                     = [
      + (known after apply),
      + (known after apply),
    ]
  + nat_public_ips                              = [
      + (known after apply),
      + (known after apply),
    ]
  + natgw_ids                                   = [
      + (known after apply),
      + (known after apply),
    ]
  + outpost_subnet_arns                         = []
  + outpost_subnets                             = []
  + outpost_subnets_cidr_blocks                 = []
  + outpost_subnets_ipv6_cidr_blocks            = []
  + private_ipv6_egress_route_ids               = []
  + private_nat_gateway_route_ids               = [
      + (known after apply),
      + (known after apply),
    ]
  + private_route_table_association_ids         = [
      + (known after apply),
      + (known after apply),
    ]
  + private_route_table_ids                     = [
      + (known after apply),
      + (known after apply),
    ]
  + private_subnet_arns                         = [
      + (known after apply),
      + (known after apply),
    ]
  + private_subnets                             = [
      + (known after apply),
      + (known after apply),
    ]
  + private_subnets_cidr_blocks                 = [
      + "10.20.0.0/20",
      + "10.20.16.0/20",
    ]
  + private_subnets_ipv6_cidr_blocks            = []
  + public_internet_gateway_route_id            = (known after apply)
  + public_route_table_association_ids          = [
      + (known after apply),
      + (known after apply),
    ]
  + public_route_table_ids                      = [
      + (known after apply),
    ]
  + public_subnet_arns                          = [
      + (known after apply),
      + (known after apply),
    ]
  + public_subnets                              = [
      + (known after apply),
      + (known after apply),
    ]
  + public_subnets_cidr_blocks                  = [
      + "10.20.32.0/20",
      + "10.20.48.0/20",
    ]
  + public_subnets_ipv6_cidr_blocks             = []
  + redshift_public_route_table_association_ids = []
  + redshift_route_table_association_ids        = []
  + redshift_route_table_ids                    = [
      + (known after apply),
      + (known after apply),
    ]
  + redshift_subnet_arns                        = []
  + redshift_subnets                            = []
  + redshift_subnets_cidr_blocks                = []
  + redshift_subnets_ipv6_cidr_blocks           = []
  + this_customer_gateway                       = {}
  + vpc_arn                                     = (known after apply)
  + vpc_cidr_block                              = "10.20.0.0/16"
  + vpc_enable_dns_hostnames                    = true
  + vpc_enable_dns_support                      = true
  + vpc_flow_log_cloudwatch_iam_role_arn        = ""
  + vpc_flow_log_destination_arn                = ""
  + vpc_flow_log_destination_type               = "cloud-watch-logs"
  + vpc_id                                      = (known after apply)
  + vpc_instance_tenancy                        = "default"
  + vpc_ipv6_association_id                     = (known after apply)
  + vpc_ipv6_cidr_block                         = (known after apply)
  + vpc_main_route_table_id                     = (known after apply)
  + vpc_owner_id                                = (known after apply)
  + vpc_secondary_cidr_blocks                   = []
